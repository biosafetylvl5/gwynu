<!doctype html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GWYNU &#9897; Archiving</title>
    <style>
      .table-of-contents ol { counter-reset: list-item; }
      .table-of-contents li { display: block; counter-increment: list-item; }
      .table-of-contents li:before { content: counters(list-item,'.') ' '; }

      /*
      modified from:
      School Book style from goldblog.com.ua (c) Zaripov Yura <yur4ik7@ukr.net>
      */
      pre {
             overflow-x: auto;
             white-space: pre-wrap;
             word-wrap: break-word;
        }
	pre code{
		width: 95%;
		margin: 0 auto;
		display: block;
		word-wrap: break-word;
	}
	.hljs-keyword,
	.hljs-selector-tag,
	.hljs-literal {
		  color:#005599;
		    font-weight:bold;
	}

	.hljs,
	.hljs-subst {
		  color: #3e5915;
	}

	.hljs-string,
	.hljs-title,
	.hljs-section,
	.hljs-type,
	.hljs-symbol,
	.hljs-bullet,
	.hljs-attribute,
	.hljs-built_in,
	.hljs-builtin-name,
	.hljs-addition,
	.hljs-variable,
	.hljs-template-tag,
	.hljs-template-variable,
	.hljs-link {
		  color: #2c009f;
	}

	.hljs-comment,
	.hljs-quote,
	.hljs-deletion,
	.hljs-meta {
		  color: #e60415;
	}

	.hljs-keyword,
	.hljs-selector-tag,
	.hljs-literal,
	.hljs-doctag,
	.hljs-title,
	.hljs-section,
	.hljs-type,
	.hljs-name,
	.hljs-selector-id,
	.hljs-strong {
		  font-weight: bold;
	}

	.hljs-emphasis {
		  font-style: italic;
	}

	code{
		font-size: 80%;
	}
	pre code{
		    overflow-x: scroll;
		    white-space: pre;
	}
	.language-text, .language-bash{
		overflow-x: auto;
	}


    body {
	font-family: Georgia, serif;
        height:100%;
        width:100%;
	margin: 0;
    }
    img{
        max-width: 80%;
        margin: 0 auto;
        display:block;
    }
    .content{
	font-size: 24px;
        width:65%;
        margin: 0 auto;
	line-height: 1.2;
    }
    .keyword {
        font-variant: small-caps;
        font-weight: bold;
    }
    table{
        margin: 0 auto;
    }
    .outlined-block{
	    border: 1px dashed gray;
    }
    .medium-images{
	    margin: 0 auto;
	    text-align: center;
    }
    .medium-images img{
	    width: 300px;
	    max-width: 80%;
	    display: inline;
    }
    blockquote{
	    overflow-wrap: break-word;

    }
    .footnote-ref{
	    line-height:0;
	    position: relative;
	    top: 0.05em;
	    font-size: 18px;
    }
    .footnote-ref a{
	    text-decoration: none;
    }
    @media only screen and (max-width: 500px) {
	    .content{
		    width:95%;
		    font-size: 18px;
	    }
	    img{
		    max-width: 100%;
	    }
	    figure{
		    margin-inline-end: 0px;
	            margin-inline-start: 0px;
    	    }
	    ol{
		    padding-inline-start:20px;
	    }
	    pre code{
		    border-style: dashed;
		    border-width:0.01px;
		    border-color: #BDC3C7;
		    padding: 5px;
	    }
	    ul{
		    padding-inline-start: 0;
		    list-style-position: inside;
	    }
	    .footnote-ref{
		    font-size: 14px;
   	 	    line-height: 0;
		    position: relative;
		    top: 0.15em;
	    }
    }

    </style>
  </head>
  <body>
    <div class="content">
        
# Archiving

[toc]

## Software Backend

### redditPostArchiver

[redditPostArchiver](https://github.com/pl77/redditPostArchiver) is written in python and supports downloading reddit subreddits to a local database file. Originally written by GitHub user [pl77](https://github.com/pl77), it worked but needed some updating to work on python 3.8. It also needed some other work (bug fixing, error handling, probably some logging and a quiet mode). I'm working on that in my forked repository [here](https://github.com/biosafetylvl5/redditPostArchiver). The last original commit by pl77 was in 2018, so I am not hopeful that they will continue to maintain it.

### wpull

> Wpull is a Wget-compatible (or remake/clone/replacement/alternative) web downloader and crawler. [wpull](https://github.com/ArchiveTeam/wpull)

I had quite the time installing [wpull](https://github.com/ArchiveTeam/wpull). The following finnaly worked:

```bash
sudo pacman -S openssl openssl-1.0 python-pyopenssl python2-pyopenssl pyen

# start up pyenv, add to startup for the future
pyenv init >> ~/.zshrc                                                                                                                                                                                                                    
eval "$(pyenv init -)"

# install new python version
sudo su
CONFIGURE_OPTS="--without-ensurepip" CFLAGS=-I/usr/include/openssl-1.0 \ LDFLAGS=-L/usr/lib64/openssl-1.0 \
# the stated version compatible with pull (3.4.3) doesn't work 
# abc.collections.Generator was introduced in python 3.5
# Let's install 3.5.9
pyenv install 3.5.9 
exit # exit su :eyes:

# check things are working
pyenv shell 3.5.9
python --version #> Python 3.5.9

# download wpull's dependencies
wget https://raw.githubusercontent.com/ArchiveTeam/wpull/develop/requirements.txt    
```

which (at the time) output:

```text
chardet>=2.0.1,<=2.3
dnspython3==1.12
html5lib>=0.999,<1.0
lxml>=3.1.0,<=3.5
namedlist>=1.3,<=1.7
psutil>=2.0,<=4.2
sqlalchemy>=0.9,<=1.0.13
tornado>=3.2.2,<5.0
typing>=3.5,<=3.5.1
yapsy==1.11.223
```

```bash
pip3 install -r requirements.txt
pip3 install html5lib==0.9999999 
pip3 install wpull

# reset shell to default python
pyenv shell system
```

and then wpull can be run with 

```bash
PYENV_VERSION=3.5.9 pyenv exec wpull
```

I set an alias to make things easy and make my script compatible with other systems:

```bash
echo 'alias wpull="PYENV_VERSION=3.5.9 pyenv exec wpull"' >> .bashrc  
```
    </div>
  </body>
</html>
